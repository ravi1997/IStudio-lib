/**
"Description" :{
  "Dated" : "March 29,2020" ,
  "Version" : "1.0.0.1" ,
  "Author" : " Ravinder Singh"
}
*/
module IStudioLibrary;

  $Class Exception extends isDefaultClass, isEquiComparable{
      compiler.require(! $Exception.hasDefaultMembers(), $Exception.name+" cannot contain default members");
      compiler.require(! $Exception.hasVariables(), $Exception.name+" cannot contain variables");

      bool outputFuction=false;
      for(auto i:$Exception.methods()){
        if(i.isFriend() && i.name == "operator<<" && i.parameters()[0].name == "System.Output"){
          i.makePublic();
          outputFuction=true;
        }
        if(i.name=="stackTrace")
          compiler.error($Exception+"cannot contain stackTrace method");
      }
      ->{private: String name;}
      ->{public: $Exception():name{$Exception.name}{}}
      if(!outputFuction)
      ->{
          public:
          friend function readonly System.Output operator<<(readonly System.Output o,readmove $Exception c){
            o<<c.stackTrace();
            return o;
          }
        }
  };


